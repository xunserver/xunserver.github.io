import{_ as o,c as l,o as a,ah as d}from"./chunks/framework.BurO9VyR.js";const p=JSON.parse('{"title":"glob模式学习","description":null,"frontmatter":{"title":"glob模式学习","comments":true,"hide":false,"abbrlink":"5500de7d","date":"2021-11-16T17:44:06.000Z","updated":"2021-11-16T17:44:06.000Z","tags":null,"categories":null,"description":null},"headers":[],"relativePath":"posts/glob模式学习.md","filePath":"posts/glob模式学习.md"}'),t={name:"posts/glob模式学习.md"};function c(i,e,r,s,n,u){return a(),l("div",null,e[0]||(e[0]=[d('<h3 id="概念" tabindex="-1">概念 <a class="header-anchor" href="#概念" aria-label="Permalink to &quot;概念&quot;">​</a></h3><ul><li>区段 地址分隔符中分隔的区间 比如 <code>/a/b/c</code> 就分为了3个区间</li></ul><h3 id="语法" tabindex="-1">语法 <a class="header-anchor" href="#语法" aria-label="Permalink to &quot;语法&quot;">​</a></h3><ul><li><code>*</code> 匹配单个区段中0个或者多个字符</li><li><code>**</code> 匹配跨区段 0个或者多个字符, 如果是 <code>**/</code> 只会匹配目录，或者忽略目录</li><li><code>?</code> 匹配一个字符</li><li><code>[]</code>配置括号中某个字符,当开头添加 <code>^</code>、<code>!</code>时表示不匹配</li><li><code>!</code> <code>?</code> <code>*</code> 和小括号一起使用时，和正则类似</li></ul><h3 id="例子" tabindex="-1">例子 <a class="header-anchor" href="#例子" aria-label="Permalink to &quot;例子&quot;">​</a></h3><p>匹配任意module下全部js，除了index.js</p><blockquote><p>**/module/!(index).js</p></blockquote><p>只能配置 /module 或者 xx/module，不能匹配 /xx/module</p><blockquote><p>*/module</p></blockquote>',9)]))}const m=o(t,[["render",c]]);export{p as __pageData,m as default};

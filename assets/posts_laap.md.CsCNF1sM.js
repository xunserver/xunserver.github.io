import{_ as e,c as t,o as d,ah as n}from"./chunks/framework.BurO9VyR.js";const u=JSON.parse('{"title":"laap","description":null,"frontmatter":{"title":"laap","comments":true,"hide":false,"abbrlink":"35421d6a","date":"2023-05-28T21:46:09.000Z","updated":"2023-05-28T21:46:09.000Z","tags":null,"categories":null,"description":null},"headers":[],"relativePath":"posts/laap.md","filePath":"posts/laap.md"}'),r={name:"posts/laap.md"};function i(l,a,o,s,h,c){return d(),t("div",null,a[0]||(a[0]=[n('<h3 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h3><p>公司需要一个 ldap 的管理平台，能够对公司账密进行管理</p><h3 id="ldap-构成" tabindex="-1">ldap 构成 <a class="header-anchor" href="#ldap-构成" aria-label="Permalink to &quot;ldap 构成&quot;">​</a></h3><p>是一个目录树状的结构，ldap 只是约定的 cs 的交互协议，不关心数据如何保存，最好使用 nosql 用户目录中每一项都是一个是 entry，无论是叶子节点还是中间节点。每一项都包含了一个 DN、若干属性和对象类。根节点的 DN 是空，属性和对象类标志 ldap 的服务器信息</p><h4 id="dn-distinguished-name" tabindex="-1">DN（Distinguished Name） <a class="header-anchor" href="#dn-distinguished-name" aria-label="Permalink to &quot;DN（Distinguished Name）&quot;">​</a></h4><p>唯一标识符，又若干 rdn 构成 比如 uid =xxx 的 DN 就是 uid=xxx,dc=github,dc=com，DN 就是一项的唯一标识符。</p><h4 id="rdn" tabindex="-1">RDN <a class="header-anchor" href="#rdn" aria-label="Permalink to &quot;RDN&quot;">​</a></h4><p>上面中 uid=xxx,dc=github,dc=com 就是 3 个 RDN 构成的，rdn 区分为目录和子项，其中 DC OU O、cn 都是目录型， uid,cn 是子项</p><h4 id="dc、o、ou" tabindex="-1">DC、O、OU <a class="header-anchor" href="#dc、o、ou" aria-label="Permalink to &quot;DC、O、OU&quot;">​</a></h4><p>域名组成，组织，组织单元。是目录的不同层级，现在的公司一般都直接用 DC。实际上是这么理解的，中国移动集团咪咕音乐有限公司运营部 xxx 同学，用 ladp 表示 uid=xxx,ou=运营部,o=咪咕,dc=移动</p><h4 id="cn" tabindex="-1">cn <a class="header-anchor" href="#cn" aria-label="Permalink to &quot;cn&quot;">​</a></h4><p>cn 是公共名称的，能够指代目录和子项</p><h3 id="entry-的属性和类" tabindex="-1">entry 的属性和类 <a class="header-anchor" href="#entry-的属性和类" aria-label="Permalink to &quot;entry 的属性和类&quot;">​</a></h3><p>类用于定义该 entry 拥有的属性，相当于该项的定义。</p><h3 id="如何校验" tabindex="-1">如何校验 <a class="header-anchor" href="#如何校验" aria-label="Permalink to &quot;如何校验&quot;">​</a></h3><p>基本都是首先初始化一个客户端，然后绑定一个查询用户，对传入的用户名和密码进行校验，然后没了。</p>',16)]))}const x=e(r,[["render",i]]);export{u as __pageData,x as default};

import{_ as l,c as o,o as a,ah as i}from"./chunks/framework.BurO9VyR.js";const h=JSON.parse('{"title":"js真值，隐形转换，比较","description":null,"frontmatter":{"title":"js真值，隐形转换，比较","comments":true,"abbrlink":"3c778964","date":"2019-10-08T11:34:29.000Z","updated":"2019-10-08T11:34:29.000Z","tags":null,"categories":null,"description":null},"headers":[],"relativePath":"posts/js真值，隐形转换，==比较.md","filePath":"posts/js真值，隐形转换，==比较.md"}'),t={name:"posts/js真值，隐形转换，==比较.md"};function d(n,e,r,c,s,_){return a(),o("div",null,e[0]||(e[0]=[i('<h2 id="假值的情况" tabindex="-1">假值的情况 <a class="header-anchor" href="#假值的情况" aria-label="Permalink to &quot;假值的情况&quot;">​</a></h2><ol><li><code>&quot;&quot;</code>是假</li><li>数字 <code>0</code>，<code>+0</code>，<code>-0</code>，<code>NaN</code> 是假，其余是真</li><li><code>Symbol</code> 是真</li><li><code>undefined</code>、<code>null</code> 是假</li></ol><p>除以上的情况，所有都是真值</p><h2 id="真假值使用的情况" tabindex="-1">真假值使用的情况 <a class="header-anchor" href="#真假值使用的情况" aria-label="Permalink to &quot;真假值使用的情况&quot;">​</a></h2><ol><li>if语句</li><li>!取反</li></ol><h2 id="情况分析" tabindex="-1">== 情况分析 <a class="header-anchor" href="#情况分析" aria-label="Permalink to &quot;== 情况分析&quot;">​</a></h2><ol><li>NaN 均不==</li><li>undefined和null相等</li><li>一个是boolean，另一个是Number或String， boolean转成数字</li><li>一个是对象，对象先valueOf再toString。变换成基本类型比较</li></ol><h2 id="关系运算符-、-、-、" tabindex="-1">关系运算符（&gt;、&lt;、==、!=…） <a class="header-anchor" href="#关系运算符-、-、-、" aria-label="Permalink to &quot;关系运算符（&gt;、&lt;、==、!=…）&quot;">​</a></h2><ol><li>===、!==：同时对比类型和值，两个都为真才返回真</li><li>==、!=: 若两边均为对象，对比它们的引用是否相同</li><li>逻辑非(!): 将其后变量或表达式转为布尔值</li><li>对比字符串：从头至尾扫描逐个比较每个字符的unicode码，直到分出大小</li><li>其他情况下，两边均转为数值类型</li></ol>',9)]))}const p=l(t,[["render",d]]);export{h as __pageData,p as default};

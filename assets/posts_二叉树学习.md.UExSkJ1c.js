import{_ as a,c as t,o as l,ah as i}from"./chunks/framework.BurO9VyR.js";const u=JSON.parse('{"title":"二叉树学习","description":null,"frontmatter":{"title":"二叉树学习","comments":true,"hide":false,"abbrlink":"feb19258","date":"2020-03-21T09:25:27.000Z","updated":"2020-03-21T09:25:27.000Z","tags":null,"categories":null,"description":null},"headers":[],"relativePath":"posts/二叉树学习.md","filePath":"posts/二叉树学习.md"}'),o={name:"posts/二叉树学习.md"};function r(s,e,n,_,p,d){return l(),t("div",null,e[0]||(e[0]=[i('<h2 id="红黑树" tabindex="-1">红黑树 <a class="header-anchor" href="#红黑树" aria-label="Permalink to &quot;红黑树&quot;">​</a></h2><p>红黑树是二叉平衡树的一种，包括 5 种性质</p><ol><li>根节点是黑色</li><li>节点颜色要么黑色，要么红色</li><li>每个叶子节点是黑子</li><li>任意节点到每个叶子节点的路径中包含的黑节点树 相等</li><li>每个红色节点的两个子节点的一定都是黑色（不能有两个连续的红节点）</li></ol><p>红色树通过左旋，右旋，变色来实现平衡</p><ul><li><p>左旋: 旋转节点的右节点变成父节点，选择节点变成右节点的左节点，右节点的左节点变成选择节点的右节点</p></li><li><p>右旋: 旋转节点的左节点变成父节点，旋转节点变成左节点的右节点，左节点的右节点变成旋转节点的左节点</p></li></ul><h2 id="插入流程" tabindex="-1">插入流程 <a class="header-anchor" href="#插入流程" aria-label="Permalink to &quot;插入流程&quot;">​</a></h2>',6)]))}const h=a(o,[["render",r]]);export{u as __pageData,h as default};

import{_ as t,c as a,o,ah as l}from"./chunks/framework.BurO9VyR.js";const u=JSON.parse('{"title":"防抖和节流","description":null,"frontmatter":{"title":"防抖和节流","comments":true,"hide":false,"abbrlink":"f85ddf3d","date":"2021-12-20T11:49:30.000Z","updated":"2021-12-20T11:49:30.000Z","tags":null,"categories":null,"description":null},"headers":[],"relativePath":"posts/防抖和节流.md","filePath":"posts/防抖和节流.md"}'),n={name:"posts/防抖和节流.md"};function r(s,e,d,i,_,c){return o(),a("div",null,e[0]||(e[0]=[l('<h3 id="防抖debounce" tabindex="-1">防抖debounce <a class="header-anchor" href="#防抖debounce" aria-label="Permalink to &quot;防抖debounce&quot;">​</a></h3><p>事件发生后，规定时间内只执行一次回调, 如果重复触发，会重置计时器和事件。</p><p>有立即执行和延迟执行两种方式，应用场景不同。</p><ul><li>立即执行，触发事件 -&gt; 执行回调 -&gt; 延迟。常用在输入框远程搜索。</li><li>延迟执行，触发事件 -&gt; 延时 -&gt; 执行回调。用在防止按钮重复点击</li></ul><p>实现方式如下</p><h3 id="节流" tabindex="-1">节流 <a class="header-anchor" href="#节流" aria-label="Permalink to &quot;节流&quot;">​</a></h3><p>规定时间段内，只会发生一次事件，重复事件会被舍弃掉。</p>',7)]))}const h=t(n,[["render",r]]);export{u as __pageData,h as default};

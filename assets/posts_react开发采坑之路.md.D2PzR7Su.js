import{_ as a,c as i,o as t,ah as e}from"./chunks/framework.BurO9VyR.js";const c=JSON.parse('{"title":"react开发采坑之路","description":null,"frontmatter":{"title":"react开发采坑之路","comments":true,"hide":false,"abbrlink":"5bca6e8e","date":"2020-03-31T15:48:38.000Z","updated":"2020-03-31T15:48:38.000Z","tags":null,"categories":null,"description":null},"headers":[],"relativePath":"posts/react开发采坑之路.md","filePath":"posts/react开发采坑之路.md"}'),l={name:"posts/react开发采坑之路.md"};function n(p,s,h,r,k,o){return t(),i("div",null,s[0]||(s[0]=[e('<h2 id="父组件给子组件设置-classname-也需要通过-props-传递" tabindex="-1">父组件给子组件设置 className 也需要通过 props 传递 <a class="header-anchor" href="#父组件给子组件设置-classname-也需要通过-props-传递" aria-label="Permalink to &quot;父组件给子组件设置 className 也需要通过 props 传递&quot;">​</a></h2><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> className</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`${</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">props</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">className</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}  otherClassName`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}&gt;</span></span></code></pre></div><h2 id="jsx-属性命名原则" tabindex="-1">jsx 属性命名原则 <a class="header-anchor" href="#jsx-属性命名原则" aria-label="Permalink to &quot;jsx 属性命名原则&quot;">​</a></h2><p>React DOM 使用 camelCase（小驼峰命名）来定义属性的名称</p>',4)]))}const E=a(l,[["render",n]]);export{c as __pageData,E as default};

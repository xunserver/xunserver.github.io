import{_ as e,c as t,o,ah as r}from"./chunks/framework.BurO9VyR.js";const _=JSON.parse('{"title":"微信小程序与入门到放弃","description":null,"frontmatter":{"title":"微信小程序与入门到放弃","comments":true,"hide":false,"abbrlink":"f26cc72d","date":"2023-03-14T09:04:26.000Z","updated":"2023-03-14T09:04:26.000Z","tags":null,"categories":null,"description":null},"headers":[],"relativePath":"posts/微信小程序与入门到放弃.md","filePath":"posts/微信小程序与入门到放弃.md"}'),s={name:"posts/微信小程序与入门到放弃.md"};function n(l,a,i,p,d,h){return o(),t("div",null,a[0]||(a[0]=[r('<h3 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h3><p>公司要搞小程序，简单调研了一波小程序开发</p><h3 id="微信开发者工具" tabindex="-1">微信开发者工具 <a class="header-anchor" href="#微信开发者工具" aria-label="Permalink to &quot;微信开发者工具&quot;">​</a></h3><p>全面的IDE工具，能够实现npm引入、预览、基础库升级等操作,小项目都采用这个。</p><h3 id="小程序是个啥" tabindex="-1">小程序是个啥 <a class="header-anchor" href="#小程序是个啥" aria-label="Permalink to &quot;小程序是个啥&quot;">​</a></h3><p>运行在微信客户端中程序，能够忽略平台的差异，运行在不同的机器上，具有渲染层和逻辑层（不互斥）。和前端开发很多地方类似。wxml(html), wxss(css), js(js)。开发中按照阉割版的前端来思考，官方提供了大量基础组件来替代html元素。</p><h3 id="项目组成" tabindex="-1">项目组成 <a class="header-anchor" href="#项目组成" aria-label="Permalink to &quot;项目组成&quot;">​</a></h3><h4 id="配置文件" tabindex="-1">配置文件 <a class="header-anchor" href="#配置文件" aria-label="Permalink to &quot;配置文件&quot;">​</a></h4><p>app.json 整个小程序的全局配置，包括pages(包含的页面), window(窗口,背景、导航栏),tabBar(底部导航栏)等配置 page.json 在每个页面中同名的json文件，配置当前页的组件、window等配置 project.config.json 项目的配置，工程缩进等 sitemap.json 配置小程序的SEO</p><h4 id="app" tabindex="-1">app <a class="header-anchor" href="#app" aria-label="Permalink to &quot;app&quot;">​</a></h4><p>每个小程序都会有一个app实例，在app.js 需要启动该小程序。</p>',11)]))}const u=e(s,[["render",n]]);export{_ as __pageData,u as default};

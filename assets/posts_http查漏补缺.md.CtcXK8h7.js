import{_ as a,c as e,o as s,ah as o}from"./chunks/framework.BurO9VyR.js";const _=JSON.parse('{"title":"http查漏补缺","description":null,"frontmatter":{"title":"http查漏补缺","comments":true,"hide":false,"abbrlink":"756fdee8","date":"2022-03-03T17:43:40.000Z","updated":"2022-03-03T17:43:40.000Z","tags":null,"categories":null,"description":null},"headers":[],"relativePath":"posts/http查漏补缺.md","filePath":"posts/http查漏补缺.md"}'),r={name:"posts/http查漏补缺.md"};function l(i,t,n,h,p,d){return s(),e("div",null,t[0]||(t[0]=[o('<h3 id="https-加密流程" tabindex="-1">https 加密流程 <a class="header-anchor" href="#https-加密流程" aria-label="Permalink to &quot;https 加密流程&quot;">​</a></h3><ol><li>服务端使用第三方机构（ca）的私钥加密，获得一个公钥证书发给浏览器</li><li>浏览器调用三芳芳机构公钥解密，获得服务端的公钥。浏览器使用服务端公钥生成一个对称密钥，发给服务端</li><li>服务端使用自己的私钥解密，获取到对称的密钥</li></ol><h3 id="dns" tabindex="-1">DNS <a class="header-anchor" href="#dns" aria-label="Permalink to &quot;DNS&quot;">​</a></h3><p>DNS使用UDP， 递归查询是指域名服务帮忙查询下一级，迭代查询是指客户端自己查询下一级</p><h3 id="常见服务端口" tabindex="-1">常见服务端口 <a class="header-anchor" href="#常见服务端口" aria-label="Permalink to &quot;常见服务端口&quot;">​</a></h3><p>20 ftp数据口<br> 21 ftp控制口<br> 22 ssh<br> 23 telnet<br> 80 http<br> 443 https<br> 3306 mysql<br> 6379 redis</p><h3 id="localstorage-和-sessionstorage。" tabindex="-1">localStorage 和 sessionStorage。 <a class="header-anchor" href="#localstorage-和-sessionstorage。" aria-label="Permalink to &quot;localStorage 和 sessionStorage。&quot;">​</a></h3><p>localStorage在存储系统中按照同源策略保存，sessionStorage按照同源同时加上tabId保存，当页面tab被关闭时清空，而不是等到浏览器关闭时清空，而且不同tab页面不共享。</p>',8)]))}const b=a(r,[["render",l]]);export{_ as __pageData,b as default};
